%Dir genericModel_ref {

  float minSize = 40.0f :(pixels);

  float mainColor[4] = { 1.0f, 0.0f, 0.0f, 1.0f } :color of ac;
  float mainColor2[4] = { 0.0f, 0.0f, 1.0f, 1.0f } :color of ac;
  float shadowColor[4] = { 0.4f*0.75f, 0.5f*0.75f, 0.15f*0.75f, 1.0f }
      :color of shadow;

  float span = 73.0f/12 :wing span (ft);
  float croot = 12.5f/12 :wing root chord;
  float ctip  = 12.5f/12 :wing tip chord;
  float sweep = 0.0f :wind 1/4 chord sweep (deg);
  float dihedral = 3.0f/8.0f/12.0f*57.3f :dihedral (deg);
  float toverc = 1.5f/12 :tip-chord ratio;
  float xw = 0.75f/12   :wing x position (root 1/4 chord, ft);
  float zw = -3.75f/12   :wing z position;

  float hspan = 25.5f/12 :horizontal span (ft);
  float hcroot = 9.0f/12 :horizontal root chord;
  float hctip  = 6.24f/12 :horizontal tip chord;
  float hsweep = 10.0f :horizontal sweep (deg);
  float hdihedral = 0.0f :horizontal dihedral (deg);
  float htoverc = 0.075f :horizontal tip-chord ratio;
  float xh = -2.5f  :horizontal x position (root 1/4 chord, ft);
  float zh = 0.0f   :horizontal z position;

  float vspan = 9.25f/12 :vertical span (ft);
  float vcroot = 13.5f/12 :vertical root chord;
  float vctip  = 3.5f/12 :vertical tip chord;
  float vsweep = 45.0f :vertical sweep (deg);
  float vtoverc = 0.075f :vertical tip-chord ratio;
  float xv = -2.35f   :vertical x position (root 1/4 chord, ft);
  float zv = -0.0f  :vertical z position;

  float flength = 4.75f :length of fuselage;
  float fwidth  = 4.0f/12  :width of fuselage;
  float fheight = 7.5f/12 :height of fuselage;
  float xnose = 19.0f/12 :x position of nose (ft);
  float xmax  = 0.0f  :x position of widest point;
  float znose = 0.5f/12 :z position of nose;
  float zmax  = -0.75f/12 :z position of widest point (middle);
  float ztail = 0.0f :z posiiton of tail;

  int generic_dl = 0 :display list;
  int generic_shadow_dl = 0 :display list;

  string name = "Airplane\0                          " : ;
} genericModel;


%Dir skytoteModel_ref {

  float mainColor[4] = { 1.0f, 0.0f, 0.0f, 1.0f } :color of ac;
  float mainColor2[4] = { 0.0f, 0.0f, 1.0f, 1.0f } :color of ac;
  float shadowColor[4] = { 0.4f*0.75f, 0.5f*0.75f, 0.15f*0.75f, 1.0f }
      :color of shadow;

  float span = 8.0f :wing span (ft);
  float croot = 1.85f :wing root chord;
  float ctip  = 1.28f :wing tip chord;
  float sweep = 0.0f :wind 1/4 chord sweep (deg);
  float dihedral = 0 :dihedral (deg);
  float toverc = 1.5f/12 :tip-chord ratio;
  float xw = 0.0625f   :wing x position (root 1/4 chord, ft);
  float zw = 0.2f   :wing z position;

  float hspan = 5.5f :horizontal span (ft);
  float hcroot = 0.83f :horizontal root chord;
  float hctip  = 0.58f :horizontal tip chord;
  float hsweep = 10.0f :horizontal sweep (deg);
  float hdihedral = 0.0f :horizontal dihedral (deg);
  float htoverc = 0.075f :horizontal tip-chord ratio;
  float xh = -3.25f  :horizontal x position (root 1/4 chord, ft);
  float zh = 0.0f   :horizontal z position;

  float flength = 7.0f :length of fuselage;
  float fwidth  = 1.5f  :width of fuselage;
  float fheight = 1.5f :height of fuselage;
  float xnose = 3.0f :x position of nose (ft);
  float xmax  = 0.75f  :x position of widest point;
  float znose = 0 :z position of nose;
  float zmax  = 0 :z position of widest point (middle);
  float ztail = 0 :z posiiton of tail;

  int skytote_dl = 0 :display list;
  int skytote_shadow_dl = 0 :display list;
} skytoteModel;


%Dir edgeModel_ref {
  int   enableActuators = 1  :flag for moving actuators;
  float minSize = 40.0f :(pixels);
  float mainColor[4] = { 1.0f, 0.0f, 0.0f, 1.0f } :color of ac;
  float mainColor2[4] = { 0.0f, 0.0f, 1.0f, 1.0f } :color of ac;
  float shadowColor[4] = { 0.4f*0.75f, 0.5f*0.75f, 0.15f*0.75f, 1.0f }
      :color of shadow;
  float stripeColor[4] = {1.0f, 1.0f, 1.0f, 1.0f } :color of stripe;
  float canopyColor[4] = {0.6f, 0.6f, 0.6f, 1.0f } :color of cockpit;
  float silverColor[4] = { 0.6f, 0.6f, 0.6f, 1.0f } :color;
  float blackColor[4] = {0.2f, 0.2f, 0.2f, 1.0f } :color;
  float propColor[4] = {0.7f, 0.7f, 0.7f, 0.2f } :propeller color;

  float daScale    = 0.57f   :scale aileron motion;
  float deScale    = 0.7f    :scale elevator motion;
  float drScale    = 0.65f   :scale rudder motion;
  float scale      = 12.0f   :divisor scale factor e.g. in to ft;
  float dOffset    = 0.75f    : shift actuator position for visibility;
  float xnose      = 11.75f  :x position of nose;
  float ynose      = 5.25f   :half width of nose end of fuselage;
  float znoseTop   = -3.75f  :z position of top of nose;
  float znoseBot   = 6.25f   :z position of bottom of nose;
  float xtail      = -53.25f :x position of tail end of fuselage;
  float ytail      = 0.625f  :half width of tail end of fuselage;
  float ztailBot   = 4.0f    :z position of bottom of tail end of fuselage;
  float ncdiameter = 4.0f    :diameter of nose cone;
  float nclength   = 5.0f    :length of nose cone;
  float zstripeTop = -2.5f   :z position of top of stripe;
  float zstripeBot = 1.5f    :z position of bottom of stripe;
  float cowl       = 13.5f   :length of cowling;
  float canh1      = 2.5f    :intermediate height of canopy;
  float xcanBot    = -18.75f :x position of base of back of canopy;
  float xcanTop    = -19.75f :x position of base of top of canopy;
  float xvtleBot   = -46.75f: x position of base of vertical tail leading edge;
  float xwingle    = 7.25f   :x position of wing leading edge;
  float wingl      = 47.75f  :spanwise length of one wing;
  float wcroot     = 23.0f   :chord length at wing root;
  float wctip      = 13.0f   :chord length at wing tip;
  float wstripew   = 5.25f   :width of wing stripe;
  float wmaxt      = 2.5f    :wing max thickness;
  float htmaxt     = 1.7f    :horizontal tail max thickness;
  float demaxt     = 1.0f    :elevator max thickness;
  float htlength   = 16.0f   :length of one horizontal tail;
  float xhtle      = -41.25f :x position of horizontal tail leading edge;
  float htcroot    = 6.25f   :chord at root of horizontal tail;
  float cda        = 5.0f    :aileron chord length;
  float damaxt     = 1.4f   :max aileron thickness;

  float lgNoseOffset   = 1.0f :landing gear dist behind cowling start;
  float clgroot        = 2.25f :chord of landing gear at root;
  float clgtip         = 1.25f :chord of landing gear at tip;
  float lgThickness    = 0.25f :thickness of landing gear;
  float lgSpan         = 22.75f :span of landing gear;
  float lgh            = 8.0f  :height of landing gear;
  float wheelr         = 2.75f :wheel radius;
  float wheelThickness = 1.5f :wheel thickness;
  float propr          = 13.5f :propeller radius;
  float propOffset     = 1.0f :prop offset from start of nose cone;

  int edge_dl         = 0 :display list;
  int edge_shadow_dl  = 0 :display list;
  int edge_dr_dl      = 0 :display list;
  int edge_der_dl     = 0 :display list;
  int edge_del_dl     = 0 :display list;
  int edge_dar_dl     = 0 :display list;
  int edge_dal_dl     = 0 :display list;
} edgeModel;

%Dir twinstarModel_ref {
  int   enableActuators = 1  :flag for moving actuators;
  float minSize = 60.0f :(pixels);
  float shadowColor[4] = { 0.4f*0.75f, 0.5f*0.75f, 0.15f*0.75f, 1.0f } :color of shadow;
  float blackColor[4] = {0.2f, 0.2f, 0.2f, 1.0f } :color;
  float propColor[4] = {0.7f, 0.7f, 0.7f, 0.2f } :propeller color;
  float tvecColor[4] = {0.0f, 0.0f, 1.0f, 1.0f} :thrust vector color;
  float whiteColor[4]  = {0.95f, 0.95f, 1.000f, 1.000f} :fuselage color;
  float orangeColor[4]  = {1.000f, 0.45f, 0.000f, 1.000f} :wingtip color;
  float metalColor[4]  = {0.800f, 0.800f, 0.800f, 1.000f} :metal parts;
  float prop1Color[4]  = {0.755f, 0.738f, 0.738f, 0.500f} :transparent prop;
  float prop2Color[4]  = {0.755f, 0.738f, 0.738f, 0.500f} :opaque prop;

  float daScale    = 60.0f    :scale aileron motion;
  float deScale    = 60.0f    :scale elevator motion;
  float drScale    = 60.0f    :scale rudder motion;
  float scale      = 12.0f   :divisor scale factor e.g. in to ft;
  float dOffset    = 0.75f    : shift actuator position for visibility;
  float xnose      = 11.75f  :x position of nose;
  float ynose      = 5.25f   :half width of nose end of fuselage;
  float znoseTop   = -3.75f  :z position of top of nose;
  float znoseBot   = 6.25f   :z position of bottom of nose;
  float xtail      = -53.25f :x position of tail end of fuselage;
  float ytail      = 0.625f  :half width of tail end of fuselage;
  float ztailBot   = 4.0f    :z position of bottom of tail end of fuselage;
  float ncdiameter = 4.0f    :diameter of nose cone;
  float nclength   = 5.0f    :length of nose cone;
  float zstripeTop = -2.5f   :z position of top of stripe;
  float zstripeBot = 1.5f    :z position of bottom of stripe;
  float cowl       = 13.5f   :length of cowling;
  float canh1      = 2.5f    :intermediate height of canopy;
  float xcanBot    = -18.75f :x position of base of back of canopy;
  float xcanTop    = -19.75f :x position of base of top of canopy;
  float xvtleBot   = -46.75f: x position of base of vertical tail leading edge;
  float xwingle    = 7.25f   :x position of wing leading edge;
  float wingl      = 47.75f  :spanwise length of one wing;
  float wcroot     = 23.0f   :chord length at wing root;
  float wctip      = 13.0f   :chord length at wing tip;
  float wstripew   = 5.25f   :width of wing stripe;
  float wmaxt      = 2.5f    :wing max thickness;
  float htmaxt     = 1.7f    :horizontal tail max thickness;
  float demaxt     = 1.0f    :elevator max thickness;
  float htlength   = 16.0f   :length of one horizontal tail;
  float xhtle      = -41.25f :x position of horizontal tail leading edge;
  float htcroot    = 6.25f   :chord at root of horizontal tail;
  float cda        = 5.0f    :aileron chord length;
  float damaxt     = 1.4f   :max aileron thickness;

  float lgNoseOffset   = 1.0f :landing gear dist behind cowling start;
  float clgroot        = 2.25f :chord of landing gear at root;
  float clgtip         = 1.25f :chord of landing gear at tip;
  float lgThickness    = 0.25f :thickness of landing gear;
  float lgSpan         = 22.75f :span of landing gear;
  float lgh            = 8.0f  :height of landing gear;
  float wheelr         = 2.75f :wheel radius;
  float wheelThickness = 1.5f :wheel thickness;
  float propr          = 13.5f :propeller radius;
  float propOffset     = 1.0f :prop offset from start of nose cone;

  int twinstar_dl         = 0 :display list;
  int twinstar_shadow_dl  = 0 :display list;
  int twinstar_dr_dl      = 0 :display list;
  int twinstar_der_dl     = 0 :display list;
  int twinstar_del_dl     = 0 :display list;
  int twinstar_tv_dl      = 0 :display list;
  int twinstar_dal_dl     = 0 :display list;
} twinstarModel;

%Dir freewingModel_ref {
  float minSize = 60.0f :(pixels);

  Float shadowColor[4] = { 0, 0, 0, 0.2f } :color of shadow;
  Float propColor[4]  = {0.755f, 0.738f, 0.738f, 0.500f} :prop;
  Float bodyColor[4]  = {0.95f, 0.95f, 1.000f, 1.000f} :main color;
  Float tvecColor[4] = {0.0f, 0.0f, 1.0f, 1.0f} :thrust vector color;

  float fusew     =  0.5f :(ft) fuselage width;
  float fuseFront =  1.5f :(ft);
  float fuseFrontX = 0.4f :(ft);
  float boxFront  =  0.8f :(ft);
  float boxBack   =  0.8f :(ft);
  float boxH      =  0.6f :(ft);
  double propPitch = 0.4  :(rad);

  int shadow_dl  = 0 :display list;
  float sinProp = 0 : ;
  float cosProp = 1 : ;
} freewingModel;

%Dir quadrotorModel_ref {
  char drawShadow = 1 : ;
  float minSize = 180.0f :(pixels);
  float scaleSize = 1.0f :factor for size of aircraft;

  float shadowColor[4] = { 0.2f, 0.2f, 0.2f, 1.0f }                     :color of shadow;
  float blackColor[4]  = {0.2f, 0.2f, 0.2f, 1.0f }                      :black color;
  float propColor[4]   = {0.7f, 0.7f, 0.7f, 0.2f }                      :propeller color;
  float redColor[4]    = {0.464f, 0.153f, 0.153f, 1.0f}                 :motor color;
  float grayColor[4]   = {0.5f, 0.5f, 0.50f, 1.000f}                    :fuselage color;
  float tvecColor[4]   = {0.0f, 0.0f, 1.0f, 1.0f}                       :thrust vector color;
  float pcbColor[4]    = {0.371f, 0.718f, 0.954f, 1.000f}               :pcb color;

  int quadrotor_dl         = 0 :display list;
  int quadrotor_shadow_dl  = 0 :display list;
  int quadrotor_tvf_dl     = 0 :display list;
  int quadrotor_tva_dl     = 0 :display list;
  int quadrotor_tvr_dl     = 0 :display list;
  int quadrotor_tvl_dl     = 0 :display list;
  int quadrotor_rover	   = 0 :Draw Rover Model;

} quadrotorModel;

%Dir multirotorModel_ref {
  string name = "Multirotor\0                              " : ;
  char drawShadow = 1 : ;
  char drawThrust = 0 :truth only;
  float minSize = 50.0f :(pixels);
  float scaleSize = 1.0f :factor for size of aircraft;

  int showFlatBottom       = 0 :Draw flat bottom;

  float fuseSize[3] = {0.5f, 0.5f, 0.15f} :multipliers for fuse size;
  float armRadiusMultiplier = 0.1f :arm radius multipler;
  float motorRadiusMultiplier = 0.15f :motor radius multipler;

  float bodyColor[4]          = { 0.9f, 0.8f, 0.8f, 1 } : ;
  float body2Color[4]         = { 0.8f, 0.8f, 0.9f, 1 } : ;
  float blackColor[4]  = {0.2f, 0.2f, 0.2f, 1.0f }                      :black color;
  float propColor[4]   = {0.7f, 0.7f, 0.7f, 0.2f }                      :propeller color;
  float gearColor[4]   = {0.2f, 0.2f, 0.2f, 1.0f }                      :black color;
  float shadowColor[4] = { 0.2f, 0.2f, 0.2f, 1.0f }                     :color of shadow;
  float thrustColor[4] = { 1.0f, 1.0f, 0.2f, 1.0f }                     :color of thrust indicator;
  float thrustLineWidth = 4 :width of thrust animation;

  int body_dl    = 0 :display list;
  int shadow_dl  = 0 :display list;
} multirotorModel;

%Dir wamvModel_ref {
  float ref_S[3] = {0, 0, -3.5}										:(match si) ref pt in body struct frame (origin at bow, x forward, z down); 
  float len = 16.0f     :(ft) length;
  float draft = 0.5f    :draft;
  float beam = 8.0f     :width;
  float deckh = 4.0f    :deck height (above water);
  float hullr = 0.8f    :hull radius;
  float bowr  = 0.4f    :hull radius at bow;
  float bowh  = 1.0f    :bow height;
  float bowl  = 3.0f    :bow taper length;
  float strutx = 2.5f   :strut position;
  float strutw = 0.5f   :strut width;
  float land_w = 8.0f   :landing area width;
  float land_l = 12.0f  :landing area length;
  float smallPatternX = 2.5f   :(ft) position of small pattern;
  float smallPatternY = 0.0f   :(ft) position of small pattern;
  float smallPatternS = 2.0f   :(ft) size of small pattern;

  float shipColor[4]  = { 0.5f, 0.5f, 0.5f, 1.0 }   :ship color;
  float shipColor2[4] = { 0.5f, 0.5f, 0.7f, 1.0 }   :ship color 2;
  float strutColor[4] = { 0.0f, 0.0f, 0.0f, 1.0 }   :strut color;
  float deckColor[4]  = { 0.0f, 0.0f, 0.0f, 1.0 }   :deck color;

  string filename  = "DestroyerPad.bmp\0                     " :name of bmp file;
  string filename2 = "AprilTag36h11ID0_rim.bmp\0                 " :name of bmp file;

  int dl         = 0 :display list; 
  int dl2        = 0 :display list2; 

  float minSize = 2.0f :(pixels);

  string name = "WAM-V\0                             " : ;
} wamvModel;

%Dir vanModel_ref {
  char mode = 0 :0=van,1=pickup,2=box truck;

  float r[3] = {0, 0, 0} :ability to shift object; 
  float length = 18 :(ft);
  float width  = 8  :(ft);
  float height = 8  :(ft);
  float tireD  = 3  :(ft);
  float tireW  = 0.8f  :(ft);
  float groundClearance = 0.15f :(nd);
  float grillHeight = 1.15f/2 :(nd);
  float hoodHeight = 1.3f/2 :(nd);
  float bedHeight = 1.15f/2 :(nd);
  float pillarW = 0.1f :(nd);
  float pillarL = 0.05f :(nd);
  float pillarH = 0.025f :(nd);
  float windowH = 0.3f :(nd) side/back;
  float cabLength = 0.7f :(nd);
  float hoodLength = 0.35f :(nd) .23;
  float windshieldBump = 0.1f :(nd);
  float frontWheelX = 0.7f :(nd);
  float backWheelX = -0.55f :(nd);
  float rakeTop = 0.1f :(nd);
  float rakeBottom = 0 :(nd);
  float color[4] =  { 0.6f, 0.1f, 0.2f, 1.0 }   :body color;
  float shadowColor[4] = { 0.0f, 0.0f, 0.0f, 0.3f } : ;

  float boxLength = 16.0 :(ft);
  float boxWidth = 9.0 :(ft);
  float boxHeight = 8.0 :(ft);
  float boxWindowT = 0.8f :(nd);
  float boxWindowB = 0.5f :(nd);
  float boxWindowL = 0.5f :(nd);
  float boxWindowR = 0.85f :(nd);
  float boxColor[4] = { 0.9f, 0.9f, 0.9f, 1.0 } :box color;

  char pad = 0 :turn on landing pad 3-pad uses a texture;
  float padColor[4]     =  { 0.8f, 0.8f, 0.8f, 1.0 }    :color;
  float padMarkColor[4] =  { 0.85f, 0.3f, 0.3f, 1.0 }    :color;
  float padX = -40 :(ft);
  float padY =  0 :(ft);
  float padZ = -4  :(ft);
  float padLength = 20 :(ft);
  float padWidth  = 16 :(ft);
  int body_dl         = 0 :display list; 
  string name = "van\0                                " : ;
  string filename  = "TargetTracker/TargetImages/mbzirc_heli.bmp" :name of bmp file;
} vanModel;

%Dir sceneHelicycleModel_ref {
  float minSize = 0.1f   :frac of window;
  float scale   = 1.0f   :scale up/down;
  float bodyColor[4]      = { 0.65f, 0.6f, 0.6f, 1 }                     : ;
  float body2Color[4]     = { 0.6f, 0.6f, 0.65f, 1 }                     : ;
  float rotorColor[4]     = { 1.0f, 1.0f, 1.0f, 0.25f }                   : ;  
  float shadowColor[4]    = { 0, 0, 0, 0.1f } : ;
  float gearColor[4]      = { 0.2f, 0.2f, 0.2f, 1.0 } : ;
  float exhaustColor[4]   = { 0.75f, 0.8f, 0.8f, 1.0 } : ;
  float tailColor[4]      = { 0.3f, 0.3f, 0.3f, 1.0 } : ;

  float refpt[3]    =  {6.76f,0.0f,-0.5f} : relative to cg ;
  float trpt[3]  =  {-18.3f,-1.0f,-0.92f}  : relative to ref pt ;

  string name = "Jackal\0      " : ;

  int body_dl       = 0 :display list for body;
  int body2_dl      = 0 :display list for body;
  int main_rotor_dl = 0 :display list for rotor;
  int shadow_dl     = 0 :display list for shadow;
} sceneHelicycleModel;
